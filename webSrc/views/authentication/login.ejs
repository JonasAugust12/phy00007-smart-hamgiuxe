<form action="/login" class="auth-form">
    <h1>Login</h1>
    <div class="input-box">
        <input type="email" name="email" placeholder="Email" required>
        <i class='bx bxs-envelope'></i>
    </div>
    <div class="input-box">
        <input type="password" name="password" placeholder="Password" required>
        <i class='bx bxs-lock-alt'></i>
    </div>

    <span class="auth-err"></span>

    <div class="remember-forgot">
        <label for="forgot-password"><input id="forgot-password" type="checkbox">Remember me</label>
        <a href="/forgot-password">Forgot password?</a>
    </div>

    <button type="submit" class="btn btn-login" id="login-btn">Login</button>
    <button type="submit" class="btn btn-loading" id="loading-btn" style="display: none;">
        <%- include('../partials/loading') %>
    </button>

    <div class="register-link">
        <p>Don't have an account?
            <a href="/register">Register</a>
        </p>
    </div>
</form>

<script type="module">
    import { auth, signInWithEmailAndPassword } from "./js/firebase-config.js";

    const form = document.querySelector('.auth-form');
    const authErrElement = form.querySelector('.auth-err');
    const loginBtn = document.getElementById('login-btn');
    const loadingBtn = document.getElementById('loading-btn');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const email = form.email.value;
        const password = form.password.value;

        loginBtn.style.display = 'none';
        loadingBtn.style.display = 'block';

        try {
            const userCredential = await signInWithEmailAndPassword(auth, email, password);
            const idToken = await userCredential.user.getIdToken();

            const response = await fetch("/verify-token", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ idToken }),
            });

            if (response.ok) {
                window.location.href = "/";
            }
        } catch (error) {
            form.email.value = '';
            form.password.value = '';

            authErrElement.style.display = 'block';
            if (error.code === "auth/user-not-found") {
                authErrElement.textContent = "User not found";
            } else if (error.code === "auth/wrong-password") {
                authErrElement.textContent = "Wrong password";
            } else {
                authErrElement.textContent = "Login failed";
            }
        } finally {
            loginBtn.style.display = 'block';
            loadingBtn.style.display = 'none';
        }
    });
</script>