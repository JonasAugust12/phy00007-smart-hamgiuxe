<form action="/register" class="auth-form">
    <h1>Sign up</h1>
    <div class="input-box">
        <input type="email" placeholder="Email" name="email" required>
        <i class='bx bxs-envelope'></i>
    </div>
    <div class="input-box">
        <input type="text" placeholder="Username" name="username" required>
        <i class='bx bxs-user'></i>
    </div>
    <div class="input-box">
        <input type="text" placeholder="Phone" name="phone" required>
        <i class='bx bxs-user'></i>
    </div>
    <div class="input-box">
        <input type="password" placeholder="Password" name="password" required>
        <i class='bx bxs-lock-alt'></i>
    </div>

    <div class="input-box">
        <input type="password" placeholder="Repeat the password" name="repeat-password" required>
        <i class='bx bxs-lock-alt'></i>
    </div>

    <span class="auth-err"></span>

    <button type="submit" class="btn" id="login-btn">Sign up</button>
    <button type="submit" class="btn" id="loading-btn" style="display: none;">
        <%- include('../partials/loading') %>
    </button>

    <div class="register-link">
        <p>Aleady have an account?
            <a href="/login">Sign in</a>
        </p>
    </div>
</form>

<script type="module">
    import { auth, createUserWithEmailAndPassword } from "./js/firebase-config.js";
    import { firestore, setDoc, doc } from "./js/firebase-config.js";

    const form = document.querySelector('.auth-form');
    const authErrElement = form.querySelector('.auth-err');
    const loginBtn = document.getElementById('login-btn');
    const loadingBtn = document.getElementById('loading-btn');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const email = form.querySelector('input[name="email"]');
        const username = form.querySelector('input[name="username"]');
        const password = form.querySelector('input[name="password"]');
        const repeatPassword = form.querySelector('input[name="repeat-password"]');
        const phone = form.querySelector('input[name="phone"]');

        if (username.value.length > 12) {
            authErrElement.style.display = 'block';
            authErrElement.textContent = 'Username must be less than 12 characters';
            return;
        }

        const phoneRegex = /^\d{10,11}$/;
        if (!phoneRegex.test(phone.value)) {
            authErrElement.style.display = 'block';
            authErrElement.textContent = 'Phone number must be 10-11 digits';
            return;
        }

        if (password.value.length < 6) {
            authErrElement.style.display = 'block';
            authErrElement.textContent = 'Password must be at least 6 characters';
            return;
        }

        if (password.value !== repeatPassword.value) {
            authErrElement.style.display = 'block';
            authErrElement.textContent = 'Passwords do not match';
            return;
        }

        loginBtn.style.display = 'none';
        loadingBtn.style.display = 'block';

        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email.value, password.value);
            const user = userCredential.user;

            await setDoc(doc(firestore, "users", user.uid), {
                email: email.value,
                username: username.value,
                phone: phone.value,
                emergencyEmail: false,
                dailyEmail: false,
                dailySMS: false,
                avatarUrl: 'https://res.cloudinary.com/djyugezvf/image/upload/v1733484686/phy000007/q57ps7ajaeqeuqztwkhf.png',
                createdAt: new Date(),
            });

            window.location.href = '/login';
        } catch (error) {
            console.log(error);
            form.querySelector('input[name="email"]').value = '';
            form.querySelector('input[name="username"]').value = '';
            form.querySelector('input[name="password"]').value = '';
            form.querySelector('input[name="repeat-password"]').value = '';
            form.querySelector('input[name="phone"]').value = '';

            if (error.code === "auth/email-already-in-use") {
                authErrElement.style.display = 'block';
                authErrElement.textContent = 'Email already in use';
            } else {
                authErrElement.style.display = 'block';
                authErrElement.textContent = 'Sign up failed';
            }
        } finally {
            loginBtn.style.display = 'block';
            loadingBtn.style.display = 'none';
        }
    });

</script>